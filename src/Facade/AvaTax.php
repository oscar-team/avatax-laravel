<?php

namespace OscarTeam\AvaTax\Facade;

use Avalara\AvaTaxClient;
use Avalara\TransactionBuilder;
use Illuminate\Support\Facades\Facade;

/**
 * @method static accountResetLicenseKey($id, $model)
 * @method static activateAccount($id, $model)
 * @method static auditAccount($id, $start, $end, $top = null, $skip = null)
 * @method static createLicenseKey($id, $model)
 * @method static deleteLicenseKey($id, $licensekeyname)
 * @method static getAccount($id, $include = null)
 * @method static getAccountConfiguration($id)
 * @method static getLicenseKey($id, $licensekeyname)
 * @method static getLicenseKeys($id)
 * @method static queryAccounts($include = null, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static setAccountConfiguration($id, $model)
 * @method static resolveAddress($line1, $line2, $line3, $city, $region, $postalCode, $country, $textCase)
 * @method static resolveAddressPost($model)
 * @method static createCompanyLookupFile($accountId, $companyId, $model)
 * @method static deleteLookupFile($accountId, $id)
 * @method static getCompanyLookupFiles($accountId, $companyId)
 * @method static getLookupFile($accountId, $id)
 * @method static updateLookupFile($accountId, $id, $model)
 * @method static createAvaFileForms($model)
 * @method static deleteAvaFileForm($id)
 * @method static getAvaFileForm($id)
 * @method static queryAvaFileForms($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static updateAvaFileForm($id, $model)
 * @method static cancelBatch($companyId, $id)
 * @method static createBatches($companyId, $model)
 * @method static createTransactionBatch($companyId, $model)
 * @method static deleteBatch($companyId, $id)
 * @method static downloadBatch($companyId, $batchId, $id)
 * @method static getBatch($companyId, $id)
 * @method static listBatchesByCompany($companyId, $filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static queryBatches($filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static createCertExpressInvitation($companyId, $customerCode, $model)
 * @method static getCertExpressInvitation($companyId, $customerCode, $id, $include = null)
 * @method static listCertExpressInvitations($companyId, $include = null, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static createCertificates($companyId, $preValidatedExemptionReason, $model)
 * @method static deleteCertificate($companyId, $id)
 * @method static downloadCertificateImage($companyId, $id, $page, $type)
 * @method static getCertificate($companyId, $id, $include = null)
 * @method static getCertificateSetup($companyId)
 * @method static linkAttributesToCertificate($companyId, $id, $model)
 * @method static linkCustomersToCertificate($companyId, $id, $model)
 * @method static listAttributesForCertificate($companyId, $id)
 * @method static listCustomersForCertificate($companyId, $id, $include = null)
 * @method static queryCertificates($companyId, $include = null, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static requestCertificateSetup($companyId)
 * @method static unlinkAttributesFromCertificate($companyId, $id, $model)
 * @method static unlinkCustomersFromCertificate($companyId, $id, $model)
 * @method static updateCertificate($companyId, $id, $model)
 * @method static uploadCertificateImage($companyId, $id, $file)
 * @method static certifyIntegration($id)
 * @method static changeFilingStatus($id, $model)
 * @method static companyInitialize($model)
 * @method static createCompanies($model)
 * @method static createCompanyParameters($companyId, $model)
 * @method static createFundingRequest($id, $model)
 * @method static deleteCompany($id)
 * @method static deleteCompanyParameter($companyId, $id)
 * @method static fundingConfigurationByCompany($companyId)
 * @method static fundingConfigurationsByCompanyAndCurrency($companyId, $currency)
 * @method static getCompany($id, $include = null)
 * @method static getCompanyConfiguration($id)
 * @method static getCompanyParameterDetail($companyId, $id)
 * @method static getFilingStatus($id)
 * @method static listCompanyParameterDetails($companyId, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listFundingRequestsByCompany($id)
 * @method static listMrsCompanies()
 * @method static queryCompanies($include = null, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static setCompanyConfiguration($id, $model)
 * @method static updateCompany($id, $model)
 * @method static updateCompanyParameterDetail($companyId, $id, $model)
 * @method static queryTaxAuthorityJurisdictionRates($taxAuthorityId, $effectiveDate, $endDate, $filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static createContacts($companyId, $model)
 * @method static deleteContact($companyId, $id)
 * @method static getContact($companyId, $id)
 * @method static listContactsByCompany($companyId, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static queryContacts($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static updateContact($companyId, $id, $model)
 * @method static createCustomers($companyId, $model)
 * @method static deleteCustomer($companyId, $customerCode)
 * @method static getCustomer($companyId, $customerCode, $include = null)
 * @method static linkAttributesToCustomer($companyId, $customerCode, $model)
 * @method static linkCertificatesToCustomer($companyId, $customerCode, $model)
 * @method static linkShipToCustomersToBillCustomer($companyId, $code, $model)
 * @method static listAttributesForCustomer($companyId, $customerCode)
 * @method static listCertificatesForCustomer($companyId, $customerCode, $include = null, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listValidCertificatesForCustomer($companyId, $customerCode, $country, $region)
 * @method static queryCustomers($companyId, $include = null, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static unlinkAttributesFromCustomer($companyId, $customerCode, $model)
 * @method static unlinkCertificatesFromCustomer($companyId, $customerCode, $model)
 * @method static updateCustomer($companyId, $customerCode, $model)
 * @method static createDataSources($companyId, $model)
 * @method static deleteDataSource($companyId, $id)
 * @method static getDataSourceById($companyId, $id)
 * @method static listDataSources($companyId, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static queryDataSources($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static updateDataSource($companyId, $id, $model)
 * @method static getCrossBorderCode($country, $hsCode)
 * @method static getLoginVerifierByForm($form, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listAllMarketplaceLocations($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listAvaFileForms($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listCertificateAttributes($companyid, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listCertificateExemptReasons($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listCertificateExposureZones($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listClassificationParametersUsage($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listCommunicationsServiceTypes($id, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listCommunicationsTransactionTypes($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listCommunicationsTSPairs($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listCountries($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listCoverLetters($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listCrossBorderCodes($country, $hsCode, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listCrossBorderSections()
 * @method static listCurrencies($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listEntityUseCodes($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listFilingFrequencies($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listJurisdictions($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listJurisdictionsByAddress($line1, $line2, $line3, $city, $region, $postalCode, $country, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listJurisdictionsByRateTypeTaxTypeMapping($country, $region, $taxTypeId, $taxSubTypeId, $rateTypeId, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listLocationQuestionsByAddress($line1, $line2, $line3, $city, $region, $postalCode, $country, $latitude, $longitude, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listLoginVerifiers($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listMarketplaceLocations($marketplaceId, $top = null, $skip = null, $orderBy = null)
 * @method static listNexus($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNexusByAddress($line1, $line2, $line3, $city, $region, $postalCode, $country, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNexusByCountry($country, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNexusByCountryAndRegion($country, $region, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNexusByFormCode($formCode)
 * @method static listNexusByTaxTypeGroup($taxTypeGroup, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNexusTaxTypeGroups($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNoticeCustomerFundingOptions($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNoticeCustomerTypes($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNoticeFilingtypes($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNoticePriorities($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNoticeReasons($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNoticeResponsibilities($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNoticeRootCauses($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNoticeStatuses($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNoticeTypes($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listParameters($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listParametersByItem($companyCode, $itemCode, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listParametersUsage($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listPermissions($top = null, $skip = null)
 * @method static listPostalCodes($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listPreferredPrograms($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listProductClassificationSystems($filter, $top, $skip, $orderBy, $countryCode)
 * @method static listProductClassificationSystemsByCompany($companyCode, $filter, $top, $skip, $orderBy, $countryCode)
 * @method static listRateTypesByCountry($country, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listRateTypesByCountryTaxTypeTaxSubType($country, $taxTypeId, $taxSubTypeId, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listRegions($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listRegionsByCountry($country, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listResourceFileTypes($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listReturnsParametersUsage($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listSecurityRoles($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listSubscriptionTypes($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listTags($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listTaxAuthorities($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listTaxAuthorityForms($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listTaxAuthorityTypes($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listTaxCodes($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listTaxCodeTypes($top = null, $skip = null)
 * @method static listTaxForms($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listTaxSubTypes($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listTaxSubTypesByCountryAndTaxType($country, $taxTypeId, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listTaxSubTypesByJurisdictionAndRegion($jurisdictionCode, $region, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listTaxTypeGroups($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listTaxTypesByNexusAndCountry($country, $companyId, $top = null, $skip = null, $orderBy = null)
 * @method static listUnitOfBasisByCountryAndTaxTypeAndTaxSubTypeAndRateType($country, $taxTypeId, $taxSubTypeId, $rateTypeId, $top = null, $skip = null, $orderBy = null)
 * @method static listUnitOfMeasurement($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static createDistanceThreshold($companyId, $model)
 * @method static deleteDistanceThreshold($companyId, $id)
 * @method static getDistanceThreshold($companyId, $id)
 * @method static listDistanceThresholds($companyId, $filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static queryDistanceThresholds($filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static updateDistanceThreshold($companyId, $id, $model)
 * @method static createECommerceToken($companyId, $model)
 * @method static refreshECommerceToken($companyId, $model)
 * @method static cycleSafeOptions($companyId, $model)
 * @method static deleteCompanyReturnSettings($companyId, $filingCalendarId, $companyReturnSettingId)
 * @method static legacyFilingCalendars($companyId, $filter, $top, $skip, $orderBy, $returnCountry, $returnRegion)
 * @method static getAccrualFilings($companyId, $filingReturnId)
 * @method static getFiledReturns($companyId, $endPeriodMonth, $endPeriodYear, $frequency, $status, $country, $region, $filingCalendarId, $taxformCode)
 * @method static approveFirmClientLinkage($id)
 * @method static createAndLinkNewFirmClientAccount($model)
 * @method static createFirmClientLinkage($model)
 * @method static deleteFirmClientLinkage($id)
 * @method static getFirmClientLinkage($id)
 * @method static listFirmClientLinkage($filter = null)
 * @method static rejectFirmClientLinkage($id)
 * @method static resetFirmClientLinkage($id)
 * @method static revokeFirmClientLinkage($id)
 * @method static requestFreeTrial($model)
 * @method static activateFundingRequest($id)
 * @method static fundingRequestStatus($id)
 * @method static batchDeleteItemClassifications($companyId, $itemId)
 * @method static batchDeleteItemParameters($companyId, $itemId)
 * @method static bulkUploadItems($companyId, $model)
 * @method static createItemClassifications($companyId, $itemId, $model)
 * @method static createItemParameters($companyId, $itemId, $model)
 * @method static createItems($companyId, $model)
 * @method static createItemTags($companyId, $itemId, $model)
 * @method static deleteItem($companyId, $id)
 * @method static deleteItemClassification($companyId, $itemId, $id)
 * @method static deleteItemParameter($companyId, $itemId, $id)
 * @method static deleteItemTag($companyId, $itemId, $itemTagDetailId)
 * @method static deleteItemTags($companyId, $itemId)
 * @method static getItem($companyId, $id, $include = null)
 * @method static getItemClassification($companyId, $itemId, $id)
 * @method static getItemParameter($companyId, $itemId, $id)
 * @method static getItemTags($companyId, $itemId, $filter = null, $top = null, $skip = null)
 * @method static listItemClassifications($companyId, $itemId, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listItemParameters($companyId, $itemId, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listItemsByCompany($companyId, $filter, $include, $top, $skip, $orderBy, $tagName)
 * @method static queryItems($filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static queryItemsByTag($companyId, $tag, $filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static syncItems($companyId, $model)
 * @method static updateItem($companyId, $id, $model)
 * @method static updateItemClassification($companyId, $itemId, $id, $model)
 * @method static updateItemParameter($companyId, $itemId, $id, $model)
 * @method static createJurisdictionOverrides($accountId, $model)
 * @method static deleteJurisdictionOverride($accountId, $id)
 * @method static getJurisdictionOverride($accountId, $id)
 * @method static listJurisdictionOverridesByAccount($accountId, $filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static queryJurisdictionOverrides($filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static updateJurisdictionOverride($accountId, $id, $model)
 * @method static createLocationParameters($companyId, $locationId, $model)
 * @method static createLocations($companyId, $model)
 * @method static deleteLocation($companyId, $id)
 * @method static deleteLocationParameter($companyId, $locationId, $id)
 * @method static getLocation($companyId, $id, $include = null)
 * @method static getLocationParameter($companyId, $locationId, $id)
 * @method static listLocationParameters($companyId, $locationId, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static listLocationsByCompany($companyId, $filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static queryLocations($filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static updateLocation($companyId, $id, $model)
 * @method static updateLocationParameter($companyId, $locationId, $id, $model)
 * @method static validateLocation($companyId, $id)
 * @method static adjustMultiDocumentTransaction($code, $type, $include, $model)
 * @method static auditMultiDocumentTransaction($code, $type)
 * @method static commitMultiDocumentTransaction($model)
 * @method static createMultiDocumentTransaction($include, $model)
 * @method static getMultiDocumentTransactionByCodeAndType($code, $type, $include = null)
 * @method static getMultiDocumentTransactionById($id, $include = null)
 * @method static listMultiDocumentTransactions($filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static refundMultiDocumentTransaction($code, $type, $include, $model)
 * @method static verifyMultiDocumentTransaction($model)
 * @method static voidMultiDocumentTransaction($code, $type, $model)
 * @method static createNexus($companyId, $model)
 * @method static createNexusParameters($companyId, $nexusId, $model)
 * @method static declareNexusByAddress($companyId, $model)
 * @method static deleteNexus($companyId, $id, $cascadeDelete)
 * @method static deleteNexusParameter($companyId, $nexusId, $id)
 * @method static deleteNexusParameters($companyId, $nexusId)
 * @method static getNexus($companyId, $id, $include = null)
 * @method static getNexusByFormCode($companyId, $formCode, $include = null)
 * @method static getNexusParameter($companyId, $nexusId, $id)
 * @method static listNexusByCompany($companyId, $filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNexusByCompanyAndTaxTypeGroup($companyId, $taxTypeGroup, $filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static listNexusParameters($companyId, $nexusId, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static queryNexus($filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static updateNexus($companyId, $id, $model)
 * @method static updateNexusParameter($companyId, $nexusId, $id, $model)
 * @method static createNoticeResponsibilityType($model)
 * @method static createNoticeRootCauseType($model)
 * @method static deleteNoticeResponsibilityType($responsibilityId)
 * @method static deleteNoticeRootCauseType($rootCauseId)
 * @method static dismissNotification($id)
 * @method static getNotification($id)
 * @method static listNotifications($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static requestNewAccount($model)
 * @method static requestNewEntitlement($id, $offer)
 * @method static createAccount($model)
 * @method static createNotifications($model)
 * @method static createSubscriptions($accountId, $model)
 * @method static deleteAccount($id)
 * @method static deleteNotification($id)
 * @method static deleteSubscription($accountId, $id)
 * @method static listAccountsByTssWriteMode($writeMode)
 * @method static resetPassword($userId, $unmigrateFromAi, $model)
 * @method static updateAccount($id, $model)
 * @method static updateNotification($id, $model)
 * @method static updateSubscription($accountId, $id, $model)
 * @method static downloadReport($id)
 * @method static getReport($id)
 * @method static initiateExportDocumentLineReport($companyId, $model)
 * @method static listReports($companyId, $pageKey, $skip = null, $top = null)
 * @method static createSettings($companyId, $model)
 * @method static deleteSetting($companyId, $id)
 * @method static getSetting($companyId, $id)
 * @method static listSettingsByCompany($companyId, $filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static querySettings($filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static updateSetting($companyId, $id, $model)
 * @method static getSubscription($accountId, $id)
 * @method static listSubscriptionsByAccount($accountId, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static querySubscriptions($filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static createTaxCodes($companyId, $model)
 * @method static deleteTaxCode($companyId, $id)
 * @method static getTaxCode($companyId, $id)
 * @method static listTaxCodesByCompany($companyId, $filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static queryTaxCodes($filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static updateTaxCode($companyId, $id, $model)
 * @method static buildTaxContentFile($model)
 * @method static buildTaxContentFileForLocation($companyId, $id, $date, $format, $partnerId, $includeJurisCodes)
 * @method static downloadTaxRatesByZipCode($date, $region)
 * @method static taxRatesByAddress($line1, $line2, $line3, $city, $region, $postalCode, $country)
 * @method static taxRatesByPostalCode($country, $postalCode)
 * @method static createTaxRules($companyId, $model)
 * @method static deleteTaxRule($companyId, $id)
 * @method static getTaxRule($companyId, $id)
 * @method static listTaxRules($companyId, $filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static queryTaxRules($filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static updateTaxRule($companyId, $id, $model)
 * @method static addLines($include, $model)
 * @method static adjustTransaction($companyCode, $transactionCode, $documentType, $include, $model)
 * @method static auditTransaction($companyCode, $transactionCode)
 * @method static auditTransactionWithType($companyCode, $transactionCode, $documentType)
 * @method static bulkLockTransaction($model)
 * @method static changeTransactionCode($companyCode, $transactionCode, $documentType, $include, $model)
 * @method static commitTransaction($companyCode, $transactionCode, $documentType, $include, $model)
 * @method static createOrAdjustTransaction($include, $model)
 * @method static createTransaction($include, $model)
 * @method static deleteLines($include, $model)
 * @method static getTransactionByCode($companyCode, $transactionCode, $documentType, $include = null)
 * @method static getTransactionByCodeAndType($companyCode, $transactionCode, $documentType, $include = null)
 * @method static getTransactionById($id, $include = null)
 * @method static listTransactionsByCompany($companyCode, $dataSourceId, $include = null, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static lockTransaction($companyCode, $transactionCode, $documentType, $include, $model)
 * @method static refundTransaction($companyCode, $transactionCode, $include, $documentType, $useTaxDateOverride, $model)
 * @method static settleTransaction($companyCode, $transactionCode, $documentType, $include, $model)
 * @method static uncommitTransaction($companyCode, $transactionCode, $documentType, $include = null)
 * @method static unvoidTransaction($companyCode, $transactionCode, $documentType, $include = null)
 * @method static verifyTransaction($companyCode, $transactionCode, $documentType, $include, $model)
 * @method static voidTransaction($companyCode, $transactionCode, $documentType, $include, $model)
 * @method static createUPCs($companyId, $model)
 * @method static deleteUPC($companyId, $id)
 * @method static getUPC($companyId, $id)
 * @method static listUPCsByCompany($companyId, $filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static queryUPCs($filter = null, $include = null, $top = null, $skip = null, $orderBy = null)
 * @method static updateUPC($companyId, $id, $model)
 * @method static deleteUserDefinedField($companyId, $id)
 * @method static listUserDefinedFieldsByCompanyId($companyId, $udfType, $allowDefaults)
 * @method static updateUserDefinedField($companyId, $id, $model)
 * @method static changePassword($model)
 * @method static createUsers($accountId, $model)
 * @method static deleteUser($id, $accountId)
 * @method static getUser($id, $accountId, $include = null)
 * @method static getUserEntitlements($id, $accountId)
 * @method static listUsersByAccount($accountId, $include = null, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static queryUsers($include = null, $filter = null, $top = null, $skip = null, $orderBy = null)
 * @method static updateUser($id, $accountId, $model)
 * @method static getMySubscription($serviceTypeId)
 * @method static listMySubscriptions()
 * @method static ping()
 * @method static verifyAge($simulatedFailureCode, $model)
 * @method static deregisterShipment($companyCode, $transactionCode, $documentType)
 * @method static registerShipment($companyCode, $transactionCode, $documentType)
 * @method static registerShipmentIfCompliant($companyCode, $transactionCode, $documentType)
 * @method static verifyShipment($companyCode, $transactionCode, $documentType)
 * @method static withCatchExceptions($catchExceptions = true)
 * @method static getClient()
 *
 * // TransactionBuilder
 * @method static TransactionBuilder newTransaction(string $companyCode, string $type, string $customerCode, ?string $dateTime = null)
 *
 * @see \OscarTeam\AvaTax\AvaTax;
 * @see AvaTaxClient
 */
class AvaTax extends Facade
{
    protected static function getFacadeAccessor()
    {
        return 'avatax';
    }
}
